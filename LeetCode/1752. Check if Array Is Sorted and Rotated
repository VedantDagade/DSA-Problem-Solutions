// 1752. Check if Array Is Sorted and Rotated -: https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/description/

class Solution {
private:
    void rotateArr(vector<int> &nums, int start , int end){
       
       while(start < end){
        int temp = nums[start];
        nums[start] = nums[end];
        nums[end] = temp;
        start++;
        end--;
       }
    }
public:
    bool check(vector<int>& nums) {
        int n = nums.size();

        vector<int> copy = nums;                //[3,4,5,1,2]          
        sort(copy.begin() , copy.end());        //[1,2,3,4,5]

        for(int x = 0; x < n; x++){             
            rotateArr(nums , 0 , x-1);          
            rotateArr(nums , x , n-1);          
            rotateArr(nums , 0 , n-1);          

            if(nums == copy) return true;     // Check if nums matches sorted array

            rotateArr(nums , 0 , n-1);       // Undo the rotation to try next x
            rotateArr(nums , x , n-1);
            rotateArr(nums , 0 , x-1);
        }
        
       return false;
    }
};
