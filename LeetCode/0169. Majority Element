class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        int el;                   // element or candidate
        int count = 0;           // counter for candidate
       
        // Step 1: Moore's Voting algorithm.  Finding candidate == el
        for(int i = 0; i < n; i++){

            if(count == 0){
                el = nums[i];     // pick new candidate
                count++;

            }else if(el == nums[i]){           // same as candidate â†’ increase
                count++;        
            }else{
                count--;
            }
        }
        
        // Step 2: Verify if candidate is majority
        int cnt1 = 0;
        for(int i = 0; i < n; i++){
            if(nums[i] == el){
                cnt1++;
            }
        }

        // Step 3-: Final Check if candidate occurs > n/2 time its majority
        if(cnt1 > n/2){
            return el;
        }

        return -1;
    }
};
