// 125. Valid Palindrome -: https://leetcode.com/problems/valid-palindrome/description/

class Solution {
public:
    bool isPalindrome(string s) {

        //remove all non-alphanumeric characters
        s.erase(remove_if(s.begin(),s.end(),[](char c){
          return !isalnum(c);
        }),s.end());
        
        //convert uppercase letters to the lowercase letters.
        transform(s.begin(),s.end(),s.begin(), ::tolower);
        
        //make duplicate of original string
        string original = s;

        //set pointer
        int start = 0;
        int end = s.size()-1;

        while(start < end){
            int temp = s[start];
            s[start] = s[end];
            s[end] = temp;
            start++;
            end--;
        }

        if(original != s) return false;
        return true;
    }
};
