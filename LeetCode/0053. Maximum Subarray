class Solution {
public:
    int maxSubArray(vector<int>& nums) {

        int maxi=nums[0];
        int currsum=nums[0];
        for ( int i = 1; i < nums.size(); i++)
        {
            currsum = max(nums[i], currsum + nums[i]);
            maxi = max(maxi, currsum);
        }

        return maxi;       
    }
};

//also Very Good Way and Readable Below code-:
/*
        const int n = nums.size();
        long long maxi = LLONG_MIN;     //Very very smallest no.
        long long sum = 0;            // current sum of subarray

        for(int i=0; i<n; i++){
            sum += nums[i];         // Add current element to the sum

            if(sum > maxi){         // Update maxi if current sum is greater
                maxi = sum;
            }
            
            if(sum < 0){        // Reset sum to 0 if it becomes negative
                sum = 0;
            }
        }

        return maxi;          // Return the maximum subarray sum found       
*/
